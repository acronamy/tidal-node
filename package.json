{
  "name": "tidal-node",
  "version": "1.0.0",
  "description": "",
  "main": "src/js/tidal-node.js",
  "config": {
    "lua": {
      "version": "5.3.5",
      "archiveLib": "tmp/lua-5.3.5/src/liblua.a"
    },
    "wasm": {
      "exposeFunctions": "[]",
      "exposeRuntimeMethods": "['ccall', 'cwrap', 'allocate', 'intArrayFromString']",
      "target": "./src/*.cpp --std=c++17",
      "output": "-o wasm/main.js",
      "optimizations": "-O3",
      "wasmOnly": "-s WASM=1 -s ONLY_MY_CODE=1",
      "searchPath": "-Itmp/lua-5.3.5/src",
      "useEmbind": "--bind",
      "demangle": " -s DEMANGLE_SUPPORT=1  -g4",
      "disableExceptionCatching": "-s DISABLE_EXCEPTION_CATCHING=0",
      "env": "-s ENVIRONMENT=node "
    }
  },
  "scripts": {
    "preinstall": "mkdir tmp && mkdir bin && npm run install-luae",
    "start": "node src/js/tidal-node.js",
    "install-lua": "npm run clean-tmp && cd tmp && curl -R -O http://www.lua.org/ftp/lua-$npm_package_config_lua_version.tar.gz && tar zxf lua-$npm_package_config_lua_version.tar.gz && cd lua-$npm_package_config_lua_version && make generic CC='emcc -s WASM=1 -Wfatal-errors -fno-stack-protector -fno-common' && npm run compile && npm run test",
    "dav-stat": "echo exposed: $npm_package_config_wasm_exposeFunctions\n echo lua-version: $npm_package_config_lua_version",
    "compile": "emcc $npm_package_config_wasm_useEmbind $npm_package_config_wasm_env $npm_package_config_wasm_demangle $npm_package_config_wasm_searchPath $npm_package_config_wasm_disableExceptionCatching $npm_package_config_wasm_target $npm_package_config_lua_archiveLib $npm_package_config_wasm_optimizations -s NODERAWFS=1 -s ASSERTIONS=1 -s EXTRA_EXPORTED_RUNTIME_METHODS=\"$npm_package_config_wasm_exposeRuntimeMethods\" $npm_package_config_wasm_output",
    "compile-run": "npm run compile && npm run test-app",
    "lua-compile": "&& make CC='emcc -s WASM=1' install INSTALL_TOP=../../../local/lua-$npm_package_config_lua_version ",
    "test-js": "jest",
    "test-app": "node index.js",
    "clean": "npm run clean-tmp && rm -rf node_modules local",
    "clean-tmp": "rm -rf tmp/*"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "chalk": "^2.4.1"
  },
  "devDependencies": {
    "@babel/core": "^7.4.5",
    "@babel/preset-env": "^7.4.5",
    "babel-jest": "^24.8.0",
    "jest": "^24.8.0"
  }
}
